// Code is generated by ucloud-model, DO NOT EDIT IT.




package uphost

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UPHost API Schema
















// CreatePHostRequest is request schema for CreatePHost action
type CreatePHostRequest struct {
	request.CommonBase




    //  
    ChargeType *string `required:"false"`

    //  
    Cluster *string `required:"false"`

    //  
    Count *int `required:"false"`

    //  
    CouponId *string `required:"false"`

    //  
    ImageId *string `required:"true"`

    //  
    Name *string `required:"false"`

    //  
    Password *string `required:"true"`

    //  
    Quantity *string `required:"false"`

    //  
    Raid *string `required:"false"`

    //  
    Remark *string `required:"false"`

    //  
    SecurityGroupId *string `required:"false"`

    //  
    SubnetId *string `required:"false"`

    //  
    Tag *string `required:"false"`

    //  
    Type *string `required:"false"`

    //  
    VPCId *string `required:"false"`

}


// CreatePHostResponse is response schema for CreatePHost action
type CreatePHostResponse struct {
	response.CommonBase


    //  
    PHostId []string 

}


// NewCreatePHostRequest will create request of CreatePHost action.
func (c *UPHostClient) NewCreatePHostRequest() *CreatePHostRequest {
    req := &CreatePHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: CreatePHost


*/
func (c *UPHostClient) CreatePHost(req *CreatePHostRequest) (*CreatePHostResponse, error) {
	var err error
	var res CreatePHostResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("CreatePHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribePHostRequest is request schema for DescribePHost action
type DescribePHostRequest struct {
	request.CommonBase




    //  
    Limit *int `required:"false"`

    //  
    Offset *int `required:"false"`

    //  
    PHostId []string `required:"false"`

}


// DescribePHostResponse is response schema for DescribePHost action
type DescribePHostResponse struct {
	response.CommonBase


    //  
    PHostSet []PHostSet 

    //  
    TotalCount int 

}


// NewDescribePHostRequest will create request of DescribePHost action.
func (c *UPHostClient) NewDescribePHostRequest() *DescribePHostRequest {
    req := &DescribePHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DescribePHost


*/
func (c *UPHostClient) DescribePHost(req *DescribePHostRequest) (*DescribePHostResponse, error) {
	var err error
	var res DescribePHostResponse

	reqCopier := *req
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("DescribePHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribePHostImageRequest is request schema for DescribePHostImage action
type DescribePHostImageRequest struct {
	request.CommonBase




    //  
    ImageId []string `required:"false"`

    //  
    ImageType *string `required:"false"`

    //  
    Limit *int `required:"false"`

    //  
    Offset *int `required:"false"`

}


// DescribePHostImageResponse is response schema for DescribePHostImage action
type DescribePHostImageResponse struct {
	response.CommonBase


    //  
    ImageSet []PHostImageSet 

    //  
    TotalCount int 

}


// NewDescribePHostImageRequest will create request of DescribePHostImage action.
func (c *UPHostClient) NewDescribePHostImageRequest() *DescribePHostImageRequest {
    req := &DescribePHostImageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DescribePHostImage


*/
func (c *UPHostClient) DescribePHostImage(req *DescribePHostImageRequest) (*DescribePHostImageResponse, error) {
	var err error
	var res DescribePHostImageResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("DescribePHostImage", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribePHostTagsRequest is request schema for DescribePHostTags action
type DescribePHostTagsRequest struct {
	request.CommonBase




}


// DescribePHostTagsResponse is response schema for DescribePHostTags action
type DescribePHostTagsResponse struct {
	response.CommonBase


    //  
    TagSet []PHostTagSet 

    //  
    TotalCount int 

}


// NewDescribePHostTagsRequest will create request of DescribePHostTags action.
func (c *UPHostClient) NewDescribePHostTagsRequest() *DescribePHostTagsRequest {
    req := &DescribePHostTagsRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DescribePHostTags


*/
func (c *UPHostClient) DescribePHostTags(req *DescribePHostTagsRequest) (*DescribePHostTagsResponse, error) {
	var err error
	var res DescribePHostTagsResponse

	reqCopier := *req
    
	err = c.Client.InvokeAction("DescribePHostTags", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// GetPHostPriceRequest is request schema for GetPHostPrice action
type GetPHostPriceRequest struct {
	request.CommonBase




    //  
    ChargeType *string `required:"true"`

    //  
    Cluster *string `required:"false"`

    //  
    Count *int `required:"true"`

    //  
    Quantity *int `required:"true"`

    //  
    Type *string `required:"false"`

}


// GetPHostPriceResponse is response schema for GetPHostPrice action
type GetPHostPriceResponse struct {
	response.CommonBase


    //  
    PriceSet []PHostPriceSet 

}


// NewGetPHostPriceRequest will create request of GetPHostPrice action.
func (c *UPHostClient) NewGetPHostPriceRequest() *GetPHostPriceRequest {
    req := &GetPHostPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: GetPHostPrice


*/
func (c *UPHostClient) GetPHostPrice(req *GetPHostPriceRequest) (*GetPHostPriceResponse, error) {
	var err error
	var res GetPHostPriceResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("GetPHostPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ModifyPHostInfoRequest is request schema for ModifyPHostInfo action
type ModifyPHostInfoRequest struct {
	request.CommonBase




    //  
    Name *string `required:"false"`

    //  
    PHostId *string `required:"true"`

    //  
    Remark *string `required:"false"`

    //  
    Tag *string `required:"false"`

}


// ModifyPHostInfoResponse is response schema for ModifyPHostInfo action
type ModifyPHostInfoResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewModifyPHostInfoRequest will create request of ModifyPHostInfo action.
func (c *UPHostClient) NewModifyPHostInfoRequest() *ModifyPHostInfoRequest {
    req := &ModifyPHostInfoRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: ModifyPHostInfo


*/
func (c *UPHostClient) ModifyPHostInfo(req *ModifyPHostInfoRequest) (*ModifyPHostInfoResponse, error) {
	var err error
	var res ModifyPHostInfoResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("ModifyPHostInfo", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// PoweroffPHostRequest is request schema for PoweroffPHost action
type PoweroffPHostRequest struct {
	request.CommonBase




    //  
    PHostId *string `required:"true"`

}


// PoweroffPHostResponse is response schema for PoweroffPHost action
type PoweroffPHostResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewPoweroffPHostRequest will create request of PoweroffPHost action.
func (c *UPHostClient) NewPoweroffPHostRequest() *PoweroffPHostRequest {
    req := &PoweroffPHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: PoweroffPHost


*/
func (c *UPHostClient) PoweroffPHost(req *PoweroffPHostRequest) (*PoweroffPHostResponse, error) {
	var err error
	var res PoweroffPHostResponse

	reqCopier := *req
    
    
    
	err = c.Client.InvokeAction("PoweroffPHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// RebootPHostRequest is request schema for RebootPHost action
type RebootPHostRequest struct {
	request.CommonBase




    //  
    PHostId *string `required:"true"`

}


// RebootPHostResponse is response schema for RebootPHost action
type RebootPHostResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewRebootPHostRequest will create request of RebootPHost action.
func (c *UPHostClient) NewRebootPHostRequest() *RebootPHostRequest {
    req := &RebootPHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: RebootPHost


*/
func (c *UPHostClient) RebootPHost(req *RebootPHostRequest) (*RebootPHostResponse, error) {
	var err error
	var res RebootPHostResponse

	reqCopier := *req
    
    
    
	err = c.Client.InvokeAction("RebootPHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ReinstallPHostRequest is request schema for ReinstallPHost action
type ReinstallPHostRequest struct {
	request.CommonBase




    //  
    ImageId *string `required:"false"`

    //  
    Name *string `required:"false"`

    //  
    PHostId *string `required:"true"`

    //  
    Password *string `required:"true"`

    //  
    Raid *string `required:"false"`

    //  
    Remark *string `required:"false"`

    //  
    ReserveDisk *string `required:"false"`

    //  
    Tag *string `required:"false"`

}


// ReinstallPHostResponse is response schema for ReinstallPHost action
type ReinstallPHostResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewReinstallPHostRequest will create request of ReinstallPHost action.
func (c *UPHostClient) NewReinstallPHostRequest() *ReinstallPHostRequest {
    req := &ReinstallPHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: ReinstallPHost


*/
func (c *UPHostClient) ReinstallPHost(req *ReinstallPHostRequest) (*ReinstallPHostResponse, error) {
	var err error
	var res ReinstallPHostResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("ReinstallPHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// StartPHostRequest is request schema for StartPHost action
type StartPHostRequest struct {
	request.CommonBase




    //  
    PHostId *string `required:"true"`

}


// StartPHostResponse is response schema for StartPHost action
type StartPHostResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewStartPHostRequest will create request of StartPHost action.
func (c *UPHostClient) NewStartPHostRequest() *StartPHostRequest {
    req := &StartPHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: StartPHost


*/
func (c *UPHostClient) StartPHost(req *StartPHostRequest) (*StartPHostResponse, error) {
	var err error
	var res StartPHostResponse

	reqCopier := *req
    
    
    
	err = c.Client.InvokeAction("StartPHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// TerminatePHostRequest is request schema for TerminatePHost action
type TerminatePHostRequest struct {
	request.CommonBase




    //  
    PHostId *string `required:"true"`

    //  
    ReleaseEIP *bool `required:"false"`

}


// TerminatePHostResponse is response schema for TerminatePHost action
type TerminatePHostResponse struct {
	response.CommonBase


    //  
    PHostId string 

}


// NewTerminatePHostRequest will create request of TerminatePHost action.
func (c *UPHostClient) NewTerminatePHostRequest() *TerminatePHostRequest {
    req := &TerminatePHostRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: TerminatePHost


*/
func (c *UPHostClient) TerminatePHost(req *TerminatePHostRequest) (*TerminatePHostResponse, error) {
	var err error
	var res TerminatePHostResponse

	reqCopier := *req
    
    
    
    
    
	err = c.Client.InvokeAction("TerminatePHost", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}


