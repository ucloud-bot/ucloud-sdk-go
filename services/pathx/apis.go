// Code is generated by ucloud-model, DO NOT EDIT IT.




package pathx

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// PathX API Schema
















// CreateGlobalSSHInstanceRequest is request schema for CreateGlobalSSHInstance action
type CreateGlobalSSHInstanceRequest struct {
	request.CommonBase




    //  
    Area *string `required:"true"`

    //  
    AreaCode *string `required:"true"`

    //  
    ChargeType *string `required:"false"`

    //  
    CouponId *string `required:"false"`

    //  
    Port *int `required:"true"`

    //  
    Quantity *int `required:"false"`

    //  
    Remark *string `required:"false"`

    //  
    TargetIP *string `required:"true"`

}


// CreateGlobalSSHInstanceResponse is response schema for CreateGlobalSSHInstance action
type CreateGlobalSSHInstanceResponse struct {
	response.CommonBase


    //  
    AcceleratingDomain string 

    //  
    InstanceId string 

    //  
    Message string 

}


// NewCreateGlobalSSHInstanceRequest will create request of CreateGlobalSSHInstance action.
func (c *PathXClient) NewCreateGlobalSSHInstanceRequest() *CreateGlobalSSHInstanceRequest {
    req := &CreateGlobalSSHInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: CreateGlobalSSHInstance


*/
func (c *PathXClient) CreateGlobalSSHInstance(req *CreateGlobalSSHInstanceRequest) (*CreateGlobalSSHInstanceResponse, error) {
	var err error
	var res CreateGlobalSSHInstanceResponse

	reqCopier := *req
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	err = c.Client.InvokeAction("CreateGlobalSSHInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DeleteGlobalSSHInstanceRequest is request schema for DeleteGlobalSSHInstance action
type DeleteGlobalSSHInstanceRequest struct {
	request.CommonBase




    //  
    InstanceId *string `required:"true"`

}


// DeleteGlobalSSHInstanceResponse is response schema for DeleteGlobalSSHInstance action
type DeleteGlobalSSHInstanceResponse struct {
	response.CommonBase


    //  
    Message string 

}


// NewDeleteGlobalSSHInstanceRequest will create request of DeleteGlobalSSHInstance action.
func (c *PathXClient) NewDeleteGlobalSSHInstanceRequest() *DeleteGlobalSSHInstanceRequest {
    req := &DeleteGlobalSSHInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DeleteGlobalSSHInstance


*/
func (c *PathXClient) DeleteGlobalSSHInstance(req *DeleteGlobalSSHInstanceRequest) (*DeleteGlobalSSHInstanceResponse, error) {
	var err error
	var res DeleteGlobalSSHInstanceResponse

	reqCopier := *req
    
    
    
	err = c.Client.InvokeAction("DeleteGlobalSSHInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribeGlobalSSHAreaRequest is request schema for DescribeGlobalSSHArea action
type DescribeGlobalSSHAreaRequest struct {
	request.CommonBase




}


// DescribeGlobalSSHAreaResponse is response schema for DescribeGlobalSSHArea action
type DescribeGlobalSSHAreaResponse struct {
	response.CommonBase


    //  
    AreaSet []GlobalSSHArea 

    //  
    Message string 

}


// NewDescribeGlobalSSHAreaRequest will create request of DescribeGlobalSSHArea action.
func (c *PathXClient) NewDescribeGlobalSSHAreaRequest() *DescribeGlobalSSHAreaRequest {
    req := &DescribeGlobalSSHAreaRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DescribeGlobalSSHArea


*/
func (c *PathXClient) DescribeGlobalSSHArea(req *DescribeGlobalSSHAreaRequest) (*DescribeGlobalSSHAreaResponse, error) {
	var err error
	var res DescribeGlobalSSHAreaResponse

	reqCopier := *req
    
	err = c.Client.InvokeAction("DescribeGlobalSSHArea", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// DescribeGlobalSSHInstanceRequest is request schema for DescribeGlobalSSHInstance action
type DescribeGlobalSSHInstanceRequest struct {
	request.CommonBase




    //  
    InstanceId *string `required:"false"`

}


// DescribeGlobalSSHInstanceResponse is response schema for DescribeGlobalSSHInstance action
type DescribeGlobalSSHInstanceResponse struct {
	response.CommonBase


    //  
    InstanceSet []GlobalSSHInfo 

}


// NewDescribeGlobalSSHInstanceRequest will create request of DescribeGlobalSSHInstance action.
func (c *PathXClient) NewDescribeGlobalSSHInstanceRequest() *DescribeGlobalSSHInstanceRequest {
    req := &DescribeGlobalSSHInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: DescribeGlobalSSHInstance


*/
func (c *PathXClient) DescribeGlobalSSHInstance(req *DescribeGlobalSSHInstanceRequest) (*DescribeGlobalSSHInstanceResponse, error) {
	var err error
	var res DescribeGlobalSSHInstanceResponse

	reqCopier := *req
    
    
    
	err = c.Client.InvokeAction("DescribeGlobalSSHInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ModifyGlobalSSHPortRequest is request schema for ModifyGlobalSSHPort action
type ModifyGlobalSSHPortRequest struct {
	request.CommonBase




    //  
    InstanceId *string `required:"true"`

    //  
    Port *int `required:"true"`

}


// ModifyGlobalSSHPortResponse is response schema for ModifyGlobalSSHPort action
type ModifyGlobalSSHPortResponse struct {
	response.CommonBase


    //  
    Message string 

}


// NewModifyGlobalSSHPortRequest will create request of ModifyGlobalSSHPort action.
func (c *PathXClient) NewModifyGlobalSSHPortRequest() *ModifyGlobalSSHPortRequest {
    req := &ModifyGlobalSSHPortRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: ModifyGlobalSSHPort


*/
func (c *PathXClient) ModifyGlobalSSHPort(req *ModifyGlobalSSHPortRequest) (*ModifyGlobalSSHPortResponse, error) {
	var err error
	var res ModifyGlobalSSHPortResponse

	reqCopier := *req
    
    
    
    
    
	err = c.Client.InvokeAction("ModifyGlobalSSHPort", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}








// ModifyGlobalSSHRemarkRequest is request schema for ModifyGlobalSSHRemark action
type ModifyGlobalSSHRemarkRequest struct {
	request.CommonBase




    //  
    InstanceId *string `required:"true"`

    //  
    Remark *string `required:"false"`

}


// ModifyGlobalSSHRemarkResponse is response schema for ModifyGlobalSSHRemark action
type ModifyGlobalSSHRemarkResponse struct {
	response.CommonBase


    //  
    Message string 

}


// NewModifyGlobalSSHRemarkRequest will create request of ModifyGlobalSSHRemark action.
func (c *PathXClient) NewModifyGlobalSSHRemarkRequest() *ModifyGlobalSSHRemarkRequest {
    req := &ModifyGlobalSSHRemarkRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}


/*
API: ModifyGlobalSSHRemark


*/
func (c *PathXClient) ModifyGlobalSSHRemark(req *ModifyGlobalSSHRemarkRequest) (*ModifyGlobalSSHRemarkResponse, error) {
	var err error
	var res ModifyGlobalSSHRemarkResponse

	reqCopier := *req
    
    
    
    
    
	err = c.Client.InvokeAction("ModifyGlobalSSHRemark", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}


