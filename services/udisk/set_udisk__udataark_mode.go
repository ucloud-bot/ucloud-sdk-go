// Code is generated by ucloud-model, DO NOT EDIT IT.

package udisk

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// SetUDiskUDataArkModeRequest is request schema for SetUDiskUDataArkMode action
type SetUDiskUDataArkModeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// 使用的代金券id
	CouponId *string `required:"false"`

	// 是否开启数据方舟，开启:"Yes", 不支持:"No"。默认值："No"。
	UDataArkMode *string `required:"false"`

	// 需要设置数据方舟的UDisk的Id
	UDiskId *string `required:"true"`
}

// SetUDiskUDataArkModeResponse is response schema for SetUDiskUDataArkMode action
type SetUDiskUDataArkModeResponse struct {
	response.CommonBase
}

// NewSetUDiskUDataArkModeRequest will create request of SetUDiskUDataArkMode action.
func (c *UDiskClient) NewSetUDiskUDataArkModeRequest() *SetUDiskUDataArkModeRequest {
	req := &SetUDiskUDataArkModeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// SetUDiskUDataArkMode - 设置UDisk数据方舟的状态
func (c *UDiskClient) SetUDiskUDataArkMode(req *SetUDiskUDataArkModeRequest) (*SetUDiskUDataArkModeResponse, error) {
	var err error
	var res SetUDiskUDataArkModeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("SetUDiskUDataArkMode", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
