// Code is generated by ucloud-model, DO NOT EDIT IT.

package udisk

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// DeleteUDiskSnapshotRequest is request schema for DeleteUDiskSnapshot action
type DeleteUDiskSnapshotRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// 快照Id(填写后不能填写UDisk Id)
	SnapshotId *string `required:"false"`

	// UDisk Id,删除该盘所创建出来的所有快照(填写后不能填写SnapshotId)
	UDiskId *string `required:"false"`
}

// DeleteUDiskSnapshotResponse is response schema for DeleteUDiskSnapshot action
type DeleteUDiskSnapshotResponse struct {
	response.CommonBase
}

// NewDeleteUDiskSnapshotRequest will create request of DeleteUDiskSnapshot action.
func (c *UDiskClient) NewDeleteUDiskSnapshotRequest() *DeleteUDiskSnapshotRequest {
	req := &DeleteUDiskSnapshotRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// DeleteUDiskSnapshot - 删除Snapshot
func (c *UDiskClient) DeleteUDiskSnapshot(req *DeleteUDiskSnapshotRequest) (*DeleteUDiskSnapshotResponse, error) {
	var err error
	var res DeleteUDiskSnapshotResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteUDiskSnapshot", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
